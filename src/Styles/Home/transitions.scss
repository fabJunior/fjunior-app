@use "sass:math";
@import '../mixins.scss';

.HomeContainer {
  .container.intro {
    .MuiButton-outlined {
      opacity: 0;
      @include transition(opacity 400ms 600ms);
    }

    .MuiTypography-h1 {
      opacity: 0;
      @include transition(opacity 600ms 300ms);
    }

    .MuiTypography-h3 {
      opacity: 0;
      height: 0;
      @include transition(opacity 400ms 1000ms, height 400ms 1000ms);
    }

    &.intro-enter-active, &.intro-enter-done {
      .MuiTypography-h1, .MuiTypography-h3 {
        opacity: 1;
      }

      .MuiTypography-h3 {
        height: 2rem;
      }

      .MuiButton-outlined {
        opacity: 1;
      }
    }
  }

  .floatContainer {
    --scale: 1;

    @for $i from 1 through 7 {
      .float:nth-of-type(#{$i}) {
        @include animation(float-#{$i} 30s math.div(-1 * random(100), 10)+s ease infinite alternate);

        img:hover {
          @include transform(rotate(-60 + random(120) + deg) scale(calc(1.3 * var(--scale))));
        }
      }

      @keyframes float-#{$i} {
        0%   {@include translate_rotate(-50+random(100) + px, -50+random(100) + px, +10 - random(20) + deg);}
        25%  {@include translate_rotate(-50+random(100) + px, -50+random(100) + px, +10 - random(20) + deg);}
        50%  {@include translate_rotate(-50+random(100) + px, -50+random(100) + px, +10 - random(20) + deg);}
        75%  {@include translate_rotate(-50+random(100) + px, -50+random(100) + px, +10 - random(20) + deg);}
        100% {@include translate_rotate(-50+random(100) + px, -50+random(100) + px, +10 - random(20) + deg);}
      }
    }

    .float:nth-of-type(7) img {
      @include transform(rotate(-20deg) scale(var(--scale)));
    }

    .float:nth-of-type(6) img {
      @include transform(rotate(-20deg) scale(var(--scale)));
    }

    .float:nth-of-type(4) img {
      @include transform(rotate(20deg) scale(var(--scale)));
    }

    .float img {
      @include transform(rotate(0deg) scale(var(--scale)));
      @include transition(200ms ease);
    }

    @media only screen and (min-width: 2000px) {
      --scale: 1.3;
    }

    @media only screen and (max-width: 1450px) {
      --scale: 0.7;
    }

    @media only screen and (max-width: 800px) {
      --scale: 0.5;
    }

    particle {
      position: absolute;
      left: 0;
      top: 0;
      border-radius: 50%;
      pointer-events: none;
      opacity: 0;
    }
  }
}

/* From https://codepen.io/z-/pen/BoyXKr */

$size: 30px;
$speed: 3s;
$peakopacity:0.5;

.arrows {
	position: absolute;
	bottom:6rem;
	left:50%;
	width:$size;
	height:$size;
	@include transform(translateX(-50%));
	&:before {
		content: '';
		position: absolute;
		width:100%;
		height:100%;
		border-left:math.div($size, 3) solid rgba(255,255,255,$peakopacity);
		border-bottom:math.div($size, 3) solid rgba(255,255,255,$peakopacity);
		@include transform(translate(math.div($size, 3), math.div($size*4, 3))rotate(-45deg));
		@include animation(arrows $speed linear infinite);
	}
	&:after {
		content: '';
		position: absolute;
		width:100%;
		height:100%;
		border-left:math.div($size, 3) solid rgba(255,255,255,$peakopacity);
		border-bottom:math.div($size, 3) solid rgba(255,255,255,$peakopacity);
		@include transform(translate(math.div($size*2, 3),0px)rotate(-45deg));
		@include animation(arrows $speed linear infinite math.div($speed, -2));
	}
}

@keyframes arrows {
  0% {
    border-left:math.div($size, 3) solid rgba(255,255,255,0);
    border-bottom:math.div($size, 3) solid rgba(255,255,255,0);
    @include transform(translate(math.div($size, -6),math.div($size*4, -6))rotate(-45deg));
  }
  10%, 90% {
    border-left:math.div($size, 3) solid rgba(255,255,255,0);
    border-bottom:math.div($size, 3) solid rgba(255,255,255,0);
  }
  50% {
    border-left:math.div($size, 3) solid rgba(255,255,255,$peakopacity);
    border-bottom:math.div($size, 3) solid rgba(255,255,255,$peakopacity);
    @include transform(translate(math.div($size, -6),0px)rotate(-45deg));
  }
  100% {
    border-left:math.div($size, 3) solid rgba(255,255,255,0);
    border-bottom:math.div($size, 3) solid rgba(255,255,255,0);
    @include transform(translate(math.div($size, -6),math.div($size*4, 6))rotate(-45deg));
  }
}
